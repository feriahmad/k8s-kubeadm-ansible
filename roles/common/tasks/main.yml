---
# Common tasks for all Kubernetes nodes

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  become: true

- name: Install required system packages
  ansible.builtin.apt:
    name: "{{ system_packages }}"
    state: present
  become: true

- name: Install additional dependencies for kubeadm
  ansible.builtin.apt:
    name:
      - socat
      - conntrack
    state: present
  become: true

- name: Download and install crictl
  ansible.builtin.shell: |
    VERSION="v1.28.0"
    wget -q https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
    tar zxf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin
    rm -f crictl-$VERSION-linux-amd64.tar.gz
  args:
    creates: /usr/local/bin/crictl
  become: true

- name: Disable swap and remove from fstab
  ansible.builtin.shell: |
    swapoff -a
    sed -i '/ swap / s/^/#/' /etc/fstab
  when: disable_swap
  become: true

- name: Enable kernel modules
  ansible.builtin.modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter
  become: true

- name: Configure kernel parameters for Kubernetes
  ansible.builtin.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  with_items:
    - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
    - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
    - { name: 'net.ipv4.ip_forward', value: '1' }
  become: true

# Install Kubernetes packages directly using dpkg
- name: Create temporary directory for Kubernetes packages
  ansible.builtin.file:
    path: /tmp/kubernetes-packages
    state: directory
    mode: '0755'
  become: true

- name: Download kubelet package
  ansible.builtin.get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubernetes_version }}/bin/linux/amd64/kubelet"
    dest: /usr/local/bin/kubelet
    mode: '0755'
  become: true

- name: Download kubeadm package
  ansible.builtin.get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubernetes_version }}/bin/linux/amd64/kubeadm"
    dest: /usr/local/bin/kubeadm
    mode: '0755'
  become: true

- name: Download kubectl package
  ansible.builtin.get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubernetes_version }}/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/kubectl
    mode: '0755'
  become: true

- name: Install containerd
  ansible.builtin.apt:
    name: containerd
    state: present
  become: true

- name: Create containerd config directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
  become: true

- name: Configure containerd
  ansible.builtin.shell: containerd config default > /etc/containerd/config.toml
  become: true

- name: Update containerd configuration to use systemd cgroup driver
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '(\s+)SystemdCgroup = false'
    line: '\1SystemdCgroup = true'
    backrefs: yes
  become: true

- name: Restart containerd
  ansible.builtin.systemd:
    name: containerd
    state: restarted
    enabled: true
    daemon_reload: true
  become: true

# Create systemd service file for kubelet
- name: Create kubelet service file
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=kubelet: The Kubernetes Node Agent
      Documentation=https://kubernetes.io/docs/
      Wants=network-online.target
      After=network-online.target

      [Service]
      ExecStart=/usr/local/bin/kubelet
      Restart=always
      StartLimitInterval=0
      RestartSec=10

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/kubelet.service
    mode: '0644'
  become: true

- name: Create kubelet service directory
  ansible.builtin.file:
    path: /etc/systemd/system/kubelet.service.d
    state: directory
    mode: '0755'
  become: true

- name: Create kubelet service config
  ansible.builtin.copy:
    content: |
      [Service]
      Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
      Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
      # This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
      EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
      # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
      # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
      EnvironmentFile=-/etc/default/kubelet
      ExecStart=
      ExecStart=/usr/local/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    mode: '0644'
  become: true

- name: Create kubelet directory
  ansible.builtin.file:
    path: /var/lib/kubelet
    state: directory
    mode: '0755'
  become: true

- name: Enable kubelet service
  ansible.builtin.systemd:
    name: kubelet
    enabled: true
    daemon_reload: true
  become: true
